---
title: "Lab 01"
subtitle: "BIOS 600 - Fall 2024"
footer:  "[bios600-f24.github.io/website](https://bios600-f24.github.io/website/)"
logo: "images/logo_600.png"
editor: visual
format: html
---

Due Friday, Aug 23 at 5pm.

# Welcome

## Meet the TA

![](images/hello-sticker.jpeg){width="300"}

## **What to expect in lab**

-   Introduction to the lab assignment (\~ 5 - 10 minutes)

-   Work on the lab assignment (individual at first, but will switch to teams in a few weeks.)

-   Lab instructions posted on the [course website](https://bios600-f24.github.io/website/ "BIOS 600 Course website").

## **Tips**

-   You do not have to finish the lab in class, they will always be due the following **Friday at 5:00 pm**. One work strategy is to get through portions that you think will be most challenging (which initially might be the coding component) during lab when a TA can help you on the spot and leave the narrative writing until later.

-   When working in teams (later in the semester) do not pressure each other to finish early; use the time wisely to really learn the material and produce a quality report.

## A quick note

-   Today's lab introduces the computing tools we will be using this semester.

-   We will begin by installing R and RStudio, and familiarizing ourselves with its basic functionality.

-   We will also introduce Quarto as a tool to create high-quality reproducible reports - don't worry, a fillable template is provided.

**This is an individual lab. Your TAs will guide you through the first portion of the lab (until the "On your own" section).**

## Installation

R is a statistical programming language used for computation, data analysis, and graphics generation. It is widely used by statisticians, data scientists, and applied researchers in many fields.

### Benefits of R

-   flexible and freely available to the public, who have in turn written many user-contributed **packages** which provide additional functionality.

-   RStudio is a convenient interface for R that adds convenient features, such as exporting output in nice formats.

-   In this class, we'll be doing all of our computation in RStudio.

Let's begin by installing R and RStudio. First, we need to install R, which can be [downloaded here](https://cran.r-project.org/) (see screenshot below).

![](C:/Users/kmcco/OneDrive%20-%20University%20of%20North%20Carolina%20at%20Chapel%20Hill/Documents/UNC_Teaching/fall2024/bios600-f24/labs/images/lab-1/r1.png)

Next, install RStudio Desktop, which can be [downloaded here](https://posit.co/download/rstudio-desktop/) (see screenshot below).

![](C:/Users/kmcco/OneDrive%20-%20University%20of%20North%20Carolina%20at%20Chapel%20Hill/Documents/UNC_Teaching/fall2024/bios600-f24/labs/images/lab-1/r2.png)

## First Steps in RStudio

With R and RStudio installed, we'll begin by exploring RStudio: the interface, reading in data, and basic commands. Upon opening RStudio, you should see something similar to the window below:

![](C:/Users/kmcco/OneDrive%20-%20University%20of%20North%20Carolina%20at%20Chapel%20Hill/Documents/UNC_Teaching/fall2024/bios600-f24/labs/images/lab-1/r3.png)

The **console** is the panel on the left side, and is where users can type commands and see immediate output. Let's try it out! Type the following code into the console:

```{r echo = T, eval = F}
3 + 5
```

You should get output that looks like

```{r echo = F}
3 + 5
```

(For now, ignore the `[1]`). By typing in `3+5`, we got the expected answer, `8`. We can see that R can be used as a calculator directly in the console. Try some other commands that use R as a calculator. For instance, `3*25`, `exp(2)`, or `(10+5^2)/sqrt(40)`. Of course, R is not simply a calculator; other commands may also be entered here.

To illustrate, let's load a dataset. Enter the following command into the console (you can directly copy/paste it, but make sure everything is exactly as below):

```{r echo = T}
# temporary
cdc <- read.csv("https://www2.stat.duke.edu/courses/Spring21/sta102.001/labs/data/cdc_cleaned.csv")

# what it should eventually be once I get the website up
# cdc <- read.csv("https://bios600-f24.github.io/labs/data/cdc_cleaned.csv")
```

We've just loaded a dataset named `cdc`. These data come primarily from the Sortable Risk Factors and Health Indicators dataset from the CDC, which omprises demographic and health indices compiled from various federal sources. This dataset is now part of our **environment**, which is displayed on the top half and right side of the RStudio window.

-   The environment contains all objects in the current working space. These objects could be variables, lists of variables, or even entire datasets.

-   In the same location as the environment tab, the \*\*history tab displays all commands used during the current session (don't worry about the connections tab for now).

-   Finally, the bottom half of the right-hand panel shows information regarding files on your hard drive, installed packages, output such as plots, and help files or other documents.

Coming back to the dataset we loaded in, we can see that it is named `cdc`. We can take a look at this dataset in a spreadsheet-like window by clicking on `cdc` in the Environment tab to the right, or by running the following code in the console:

```{r echo = T}
View(cdc)
```

Note that other objects may be added to the environment, either from external data sources from the internet as in today’s example, datasets downloaded to your computer, or even as created as manipulations of existing datasets.

## Quarto and reproducible research

Quarto is a system that may be used to create easy-to-write, attractive reports, presentations, or webpsages that also serve as reproducible records of the data analysis. These reports have the desirable property of being able to not only display written narratives and figures, but also include any R code and the outputs from these code snippets.

One of the biggest strengths of Quarto is that everything is in one place, and that other users should be able to reproduce your results exactly, if they have your Quarto document and datasets - the analysis is run from the beginning each time you render the document. As well, formatting is easy! Luckily, RStudio already comes with Quarto support, so there is nothing additional to install.

Every homework assignment and lab in this class will be written in Quarto, with a template provided for you to use. This lab's template can be downloaded by typing in the following code:

```{r}
download.file("https://www2.stat.duke.edu/courses/Spring21/sta102.001/labs/lab-01-template.Rmd", destfile="C:/Users/kmcco/OneDrive - University of North Carolina at Chapel Hill/Documents/UNC_Teaching/fall2024/bios600-f24/labs/lab-01-template.Rmd")
```

You should now see the new file `lab-01.qmd` under the Files tab in the bottom-right hand side of your RStudio window. Click on `lab-01.qmd` in this window in order to open it up – it is the template for use in this lab!

First, put your name in the space at the top where it says "YOUR NAME GOES HERE".

Fill in answers in the spaces provided: text narrative should be typed directly in the document and any included R code should be typed inside “chunks,” or sections defined by three backticks (the little mark on the same key as the tilde). See the template for more instructions, or ask your TA.

An important thing to note is that the workspace of the Quarto document is separate from the console – this means that you must load any packages inside of R chunks if you want to use functions contained in them. In the template for this lab, this has been done already, but in the future you may have to do it yourself.

In order to turn this template into a shareable document, **Render** the quarto template into an HTML document by pressing the Render button at the top of the document (it is a large blue arrow facing the right). You should see the template rendered as an .html file!

## The tidyverse

-   As mentioned previously, one of the biggest strengths of R is its large userbase who have contributed user-written functions to R via packages. R packages are “add-ons” to the basic functions available in R (think of them as apps on a phone).

-   The `tidyverse` is a collection of packages designed around a common grammar and data structure. Some packages in the tidyverse that we will be using throughout this semester will be `ggplot2`, used for creating graphics and figures, and `dplyr` and `tidyr`, used for data manipulation and wrangling.

First, install the `tidyverse` package by running the following code in your R Studio console:

```{r echo = T, eval = F}
install.packages("tidyverse")
```

After installing the `tidyverse` package, you never have to install it again – all that is needed to use functions from the tidyverse is to load the package once per R session using the following code:

```{r echo = T}
library(tidyverse)
```

Remember that the console and the Quarto document have different workspaces. If you load the tidyverse package in your console, it won’t be loaded into the workspace for the Quarto document. In the lab template, code for loading the tidyverse has already been provided. However, note that you must have the package installed first.

## Basic Data Manipulation

### Exercise 1

First, let’s take a `glimpse` of the dataset by running the following code in the console:

```{r echo = T}
glimpse(cdc)
```

Each row is an *observation* and each column is a *variable*. How many rows and columns does the cdc dataset have? What does each row (observation) represent?

## Physical activity and adult obesity

Today we will be making some basic visualizations using the `ggplot` package in the tidyverse.

In this section we’ll work through a visualization example using the cdc dataset. The variables in this dataset are as follows:

```         
State, the name of the state
Region, the US Census region that each state belongs to
HDI, the Human Development Index of each state in 2017, categorized into whether they are among the top ten, the bottom ten, or the middle
InfantMortalityRate: infant mortality rate per 100,000
CVDeathRate: death rate per 100,000 due to cardiovasulcar causes
DrugDeathRate: death rate per 100,000 due to drug-related causes (ODs, etc.)
MotorDeathRate: death rate per 100,000 due to motor vehicle-related causes
CancerDeathRate: death rate per 100,000 due to cancer
Obesity: % of adults who are obese
Smoking: % of adults who smoked at least one cigarette in the past month
Exercise: % of adults who participated in at least 2.5 hours of aerobic activity per week
Seatbelt: % of adults to regularly wear their seat belt
FluVaccination: % of adults who received a flu vaccine
ChildVaccination: % of children who aged 19-35 months who have received the DTaP, polio, MMR, Hib, hepatitis B, varicella and PCV vaccines
Under18: % of residents under age 18
Over65: % of residents over age 65
```

Let’s begin with a very simple plot. Run the following code in the console:

**Attribution**

This lab was adapted from STA102 at Duke University (professors Sam Berchuck and Yue Jiang).
